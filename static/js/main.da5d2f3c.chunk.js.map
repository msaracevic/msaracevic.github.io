{"version":3,"sources":["components/ux/Header.js","components/ux/Footer.js","components/About/index.js","helpers/index.js","components/Guides/index.js","components/ux/LoadingScreen.js","components/Resources/StackOverflow.js","components/Resources/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","visibleMobile","showMobile","bind","closeMobile","this","setState","className","onClick","NavLink","to","exact","activeClassName","Component","Footer","Date","getFullYear","renderWorkItems","type","map","item","index","key","src","image","alt","company","position","location","start","end","moment","result","duration","diff","years","Math","floor","months","description","responsibilities","responsibility","technologies","renderPersonal","available","contact","renderAvailability","href","url","label","Home","work","professional","personal","project","target","rel","Guides","gist","NotFound","StackOverflow","items","length","question_id","owner","profile_image","link","decodeHtmlEntity","title","view_count","toLocaleString","is_answered","score","tags","tag","itemRender","entity","txt","document","createElement","innerHTML","value","apiBase","favoritesUrl","questionsUrl","Resources","favorites","questions","Object","keys","forEach","fetch","then","response","json","App","Route","path","component","About","Boolean","window","hostname","match","ReactDOM","render","HashRouter","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da5d2f3c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state      = {\n      visibleMobile: false\n    };\n    this.showMobile = this.showMobile.bind(this);\n    this.closeMobile = this.closeMobile.bind(this);\n  }\n\n  showMobile() {\n    this.setState({\n      visibleMobile: !this.state.visibleMobile\n    });\n  }\n\n  closeMobile() {\n    this.setState({\n      visibleMobile: false\n    });\n  }\n  \n  render() {\n    return (\n      <header className=\"page-content-header\">\n        <nav className={'navigation ' + (this.state.visibleMobile ? 'navigation--visible' : '')}>\n          <span className=\"navigation__mobile\" onClick={this.showMobile}></span>\n          <div className=\"navigation__title\"><NavLink to=\"/\">msaracevic.github.io</NavLink></div>\n          <ul className=\"navigation__content\">\n            <li className=\"navigation__link\">\n              <NavLink exact activeClassName=\"navigation__link-active\" to=\"/Guides\" onClick={this.closeMobile}>Guides</NavLink>\n            </li>\n            <li className=\"navigation__link\">\n              <NavLink activeClassName=\"navigation__link-active\" to=\"/resources\" onClick={this.closeMobile}>Resources</NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n};\n","import React, {Component} from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"page-content-footer\">\n        Copyright © {new Date().getFullYear()} Miroslav Saračević\n      </footer>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport work from '../../data/work.json';\nimport {duration} from '../../helpers/index';\n\nconst renderWorkItems = (type) => (\n  <section className=\"work\">\n    {type.map((item, index) => (\n      <section key={index} className=\"work__item\">\n        <header className=\"work__header\">\n          <div className=\"work__image\">\n            <img src={item.image} alt={item.company}/>\n          </div>\n          <div className=\"work__company-info\">\n            <h5 className=\"work__title bold\">{item.position}</h5>\n            <h6 className=\"work__title\">{item.company}, {item.location}</h6>\n            <p className=\"work__duration\">\n              From {item.start} to {item.end} ({duration(item.start, item.end)})\n            </p>\n          </div>\n        </header>\n        <div className=\"work__info\">\n          {item.description && <p>{item.description}</p>}\n          {item.responsibilities && <ul>{item.responsibilities.map((responsibility, index) => <li key={index}>{responsibility}</li>)}</ul>}\n          <p className=\"work__tech\">Tech stack: {item.technologies}</p>\n        </div>\n      </section>\n    ))}\n  </section>\n);\n\nconst renderProjectItems = (type) => (\n  <section className=\"projects\">\n    {type.map((item, index) => (\n      <section key={index} className=\"projects__item\">\n        <h5 className=\"projects__title bold\">{item.project}</h5>\n        <h6 className=\"projects__title project__link\">\n          <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">Link to project</a>\n        </h6>\n        <p>{item.description}</p>\n        <p className=\"projects__tech\">Tech stack: {item.technologies}</p>\n      </section>\n    ))}\n  </section>\n);\n\nconst renderContact = (item) => (\n  <a href={item.url} key={item.url} className=\"personal__contact\">\n    <span className=\"personal__contact-image\">\n      <img src={item.image} alt={item.label}/>\n    </span>\n    <span className=\"personal__contact-label\">{item.label}</span>\n  </a>\n);\n\n\nconst renderAvailability = (available) => (\n  <p className=\"bold\">\n    <span>Currently </span>\n    <span className={`personal__status personal__status--${available ? 'active' : 'inactive'}`}>\n      {available ? 'looking for offers' : 'not looking for offers'}\n    </span>\n  </p>\n);\n\nconst renderPersonal = (available, contact) => (\n  <section className=\"about__personal personal\">\n    <div className=\"personal__image\"><img src=\"/images/personal.jpg\" alt=\"personal\"/></div>\n    <h1 className=\"personal__name\">Miroslav Saračević</h1>\n    <div className=\"personal__tagline\">\n      <p>I am web focused software developer. Since 2014 I've worked in Berlin in several companies and was exposed to several technologies.</p>\n      <p>Currently I am mostly enjoying using React and Node.js to create web applications (coupled with usual suspects like HTML5 and SASS/CSS3).</p>\n    </div>\n    {renderAvailability(available)}\n    {contact.map(contact => renderContact(contact))}\n  </section>\n);\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = work;\n  };\n\n  render() {\n    return (\n      <article className=\"about\">\n        {renderPersonal(this.state.available, this.state.contact)}\n        <div className=\"about__work\">\n          {renderWorkItems(this.state.professional)}\n          {renderProjectItems(this.state.personal)}\n        </div>\n      </article>\n    );\n  }\n}\n","import moment from 'moment';\n\nexport function duration(start, end) {\n  if (end === 'Present') end = moment();\n  const duration = moment(end, 'MMMM YYYY').diff(moment(start, 'MMMM YYYY'), 'months') + 1;\n  let result;\n\n  if (duration > 12) {\n    const years  = Math.floor(duration / 12),\n          months = duration - (years * 12);\n\n    result = `${years} ${years === 1 ? 'year' : 'years' } \n              and ${months} ${months === 1 ? 'month' : 'months' }`;\n  } else {\n    result = `${duration} ${duration === 1 ? 'month' : 'months'}`;\n  }\n\n  return result;\n}\n","import React, {Component} from 'react';\nimport ReactEmbedGist from 'react-embed-gist'\n\nexport default class Guides extends Component {\n  render() {\n    return (\n      <article className=\"guides\">\n        <ReactEmbedGist gist=\"msaracevic/7a315f610c11d39aeea55061d3b9bf05\"/>\n        <ReactEmbedGist gist=\"msaracevic/5d757e2fc72482a9a4a439969500c2eb\"/>\n      </article>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div className={`loading-screen ${this.props.className}`}>\n        <p className=\"loading-screen__message\">\n          Loading content, please wait\n        </p>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport LoadingScreen from '../ux/LoadingScreen';\n\nexport default class StackOverflow extends Component {\n  static decodeHtmlEntity(entity) {\n    const txt     = document.createElement('textarea');\n    txt.innerHTML = entity;\n    return txt.value;\n  }\n\n  itemRender(items) {\n    if (items.length === 0) return (<LoadingScreen className=\"loading-screen--small\"/>);\n    return items.map(item => (\n        <section className=\"so-item\" key={item.question_id}>\n          <div className=\"so-item__user\">\n            <img src={item.owner.profile_image} alt=\"owner\"/>\n          </div>\n          <div className=\"so-item__content\">\n            <a href={item.link}>{StackOverflow.decodeHtmlEntity(item.title)}</a>\n            <p className=\"so-item__details\">\n              Viewed {item.view_count.toLocaleString('de-DE')} times\n              {item.is_answered ? ', answered' : ', no answer'}\n            </p>\n            <p className=\"so-item__details\">\n              Question score is {item.score.toLocaleString('de-DE')}\n            </p>\n            <p className=\"so-item__details\">\n              Tags: {\n              item.tags.map((tag, index) => (\n                <span key={index} className=\"so-item__tag\">{tag}</span>\n              ))}\n            </p>\n          </div>\n        </section>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <section className={this.props.className}>\n        <h2>{this.props.title}</h2>\n        {this.itemRender(this.props.items)}\n      </section>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport StackOverflow from './StackOverflow';\n\nconst apiVersion   = '2.2',\n      apiBase      = 'https://api.stackexchange.com',\n      userId       = 3963682,\n      favoritesUrl = `${apiBase}/${apiVersion}/users/${userId}/favorites?order=desc&sort=activity&site=stackoverflow`,\n      questionsUrl = `${apiBase}/${apiVersion}/users/${userId}/questions?order=desc&sort=activity&site=stackoverflow`;\n\nexport default class Resources extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favorites: {\n        url:   favoritesUrl,\n        items: []\n      },\n      questions: {\n        url:   questionsUrl,\n        items: []\n      }\n    };\n  };\n\n  componentWillMount() {\n    Object.keys(this.state).forEach(key => {\n      fetch(this.state[key].url)\n        .then(response => response.json())\n        .then(response => this.setState({[key]: response}));\n    });\n  };\n\n  render() {\n    return (\n      <article className=\"resources\">\n        <StackOverflow className=\"resource\" title=\"Favorites on stack overflow\" items={this.state.favorites.items}/>\n        <StackOverflow className=\"resource\" title=\"Questions on stack overflow\" items={this.state.questions.items}/>\n      </article>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport Header from './components/ux/Header';\nimport Footer from './components/ux/Footer';\n\nimport About from './components/About';\nimport Guides from './components/Guides';\nimport Resources from './components/Resources';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <main className=\"page-content-main\">\n          <Route exact path='/' component={About}/>\n          <Route exact path='/Guides' component={Guides}/>\n          <Route exact path='/resources' component={Resources}/>\n        </main>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n  <HashRouter>\n    <App />\n  </HashRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}