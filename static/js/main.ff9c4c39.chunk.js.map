{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","helpers/index.js","components/Home/index.js","components/Resources/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","exact","to","activeClassName","Footer","Date","getFullYear","duration","start","end","moment","result","diff","years","Math","floor","months","decodeHtmlEntity","entity","txt","document","createElement","innerHTML","value","WorkItems","props","items","map","item","src","image","alt","company","position","location","appImage","dangerouslySetInnerHTML","__html","description","responsibilities","responsibility","random","technologies","Personal","contact","href","url","target","rel","label","work","available","TechIcons","tech","toLowerCase","Recommendations","GetInTouch","Home","professional","apiBase","userId","favoritesUrl","questionsUrl","StackOverflowItems","link","title","owner","profile_image","view_count","toLocaleString","is_answered","score","tags","tag","index","question_id","Resources","useState","visible","favorites","setFavorites","questions","setQuestions","useEffect","fetch","then","response","json","Fragment","gist","wrapperClass","App","path","component","About","Component","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff9c4c39.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport './Header.scss';\n\nconst Header = () => (\n  <header>\n    <nav className=\"navigation\">\n      <ul className=\"navigation__content\">\n        <li className='navigation__link navigation__name'>\n          <NavLink exact to=\"/\">Miroslav Saračević</NavLink>\n        </li>\n        <li className=\"navigation__link\">\n          <NavLink exact activeClassName=\"navigation__active\" to=\"/\">Home</NavLink>\n        </li>\n        <li className=\"navigation__link\">\n          <NavLink activeClassName=\"navigation__active\" to=\"/resources\">Resources</NavLink>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => (\n  <footer className=\"page-content-footer\">\n    Copyright © {new Date().getFullYear()} Miroslav Saračević\n  </footer>\n);\n\nexport default Footer;\n","import moment from 'moment';\n\nexport function duration(start, end) {\n  if (end === 'Present') end = moment();\n  const duration = moment(end, 'MMMM YYYY').diff(moment(start, 'MMMM YYYY'), 'months') + 1;\n  let result;\n\n  if (duration > 12) {\n    const years = Math.floor(duration / 12);\n    const months = duration - (years * 12);\n\n    result = `${years} ${years === 1 ? 'year' : 'years'} \n              and ${months} ${months === 1 ? 'month' : 'months'}`;\n  } else {\n    result = `${duration} ${duration === 1 ? 'month' : 'months'}`;\n  }\n\n  return result;\n}\n\nexport function decodeHtmlEntity(entity) {\n  const txt = document.createElement('textarea');\n  txt.innerHTML = entity;\n  return txt.value;\n}\n","import React from 'react';\nimport work from '../../data/work.json';\nimport {duration} from '../../helpers/index';\nimport './Home.scss';\n\nconst WorkItems = (props) => (\n  <section className=\"work\">\n    <div className=\"work__items\">\n      <h2>Places I've worked at</h2>\n      {props.items.map(item => (\n        <div key={item.company} className=\"work__item\">\n          <header className=\"work__header\">\n            <div className=\"work__image\">\n              <img src={item.image} alt={item.company}/>\n            </div>\n            <div className=\"work__company-info\">\n              <h5 className=\"work__title bold\">{item.position}</h5>\n              <h6 className=\"work__title\">{item.company}, {item.location}</h6>\n              <p className=\"text--disclaimer\">\n                From {item.start} to {item.end} ({duration(item.start, item.end)})\n              </p>\n            </div>\n          </header>\n          <div className=\"work__body\">\n            <div className=\"work__app-image\"><img src={item.appImage} alt={item.company}/></div>\n            <div className=\"work__details\">\n              <p dangerouslySetInnerHTML={{__html: item.description}}/>\n              {item.responsibilities &&\n              <ul>{item.responsibilities.map(responsibility =>\n                <li key={Math.random()} dangerouslySetInnerHTML={{__html: responsibility}}/>\n              )}\n              </ul>}\n              <p className=\"text--bold\">Tech stack: {item.technologies}</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  </section>\n);\n\nconst Personal = props => (\n  <section className=\"home__personal\">\n    <div className=\"home__links\">\n      <div className=\"home__my-image\"><img src=\"/images/personal.jpeg\" alt=\"personal\"/></div>\n      <div className=\"home__contacts\">\n        {props.contact.map(contact => (\n          <a href={contact.url} key={contact.url} className=\"home__contact\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <span className=\"home__contact-image\"><img src={contact.image} alt={contact.label}/></span>\n            <span className=\"personal__contact-label\">{contact.label}</span>\n          </a>\n        ))}\n      </div>\n    </div>\n    <div className=\"home__about\">\n      <h1>I'm a web development specialist.</h1><br/>\n      <p className=\"text--large\">\n        Since 2014 I've worked in Berlin in several companies and I was exposed to multiple technologies and projects.\n      </p>\n      <p className=\"text--large\">\n        Regardless of your company size - I can offer technical expertise you need to create or improve your product.\n      </p>\n      <p className=\"text--large\">\n        If you have an interesting project, feel free to send me more information and get in touch with me\n        at <a href=\"mailto:dev.msaracevic@gmail.com\">dev.msaracevic@gmail.com</a>.\n      </p>\n      <p className=\"text--large bold\">\n        <span>Currently </span>\n        <span className={`home__status home__status--${work.available ? 'active' : 'inactive'}`}>\n          {work.available ? 'open for opportunities' : 'not looking for opportunities'}.\n        </span>\n      </p>\n    </div>\n  </section>\n);\n\nconst TechIcons = () => (\n  <section className=\"home__tech\">\n    <h2>Technologies I use</h2><br/>\n    {['HTML', 'CSS', 'JavaScript', 'React', 'Node.js', 'PostgreSQL'].map(tech =>\n      <div className=\"home__tech-item\" key={tech}>\n        <div className=\"home__tech-image\">\n          <img src={`/images/tech/${tech.toLowerCase()}.png`} alt={tech}/>\n        </div>\n        <p className=\"text--bold\">{tech}</p>\n      </div>\n    )}\n  </section>\n);\n\nconst Recommendations = () => (\n  <section className=\"home__recommendations-wrapper\">\n    <div className=\"home__recommendations\">\n      <h2>People I worked with</h2><br/>\n      <div className=\"recommendation\">\n        <p>\n          Miroslav worked for us as a front-end developer where he used JavaScript, CSS and HTML to improve important\n          parts of our application. He introduced some changes to our technology stack which led to better overall\n          application performance. This decreased the loading times from several seconds to a few milliseconds.\n        </p>\n        <p className=\"text--bold\">\n          Miroslav is a very quick learner who shows deep interest in his profession and building great products.\n          I can highly recommend Miroslav as a developer and great team member.\n        </p>\n        <div className=\"recommendation__author\">\n          <div className=\"recommendation__author-image\">\n            <img src=\"/images/philipp.jpeg\" alt=\"philipp\"/>\n          </div>\n          <div>\n            <span className=\"text--bold\">Philipp Stelzer</span><br/>\n            CSO, Co-Founder, <br/>\n            Formation GmbH. <br/>\n            Worked together on 2 projects.\n          </div>\n        </div>\n      </div>\n\n      <div className=\"recommendation\">\n        <p>\n          Miroslav worked for my company as a developer and made an impact from day one.\n          He did a great job building up an analytics dashboard from scratch, using D3JS, Javascript and CSS.\n        </p>\n        <p className=\"text--bold\">\n          He is a fast learner and very interested in all things web, especially the front end. I highly\n          recommend Miroslav as a developer.\n        </p>\n        <div className=\"recommendation__author\">\n          <div className=\"recommendation__author-image\">\n            <img src=\"/images/simon.jpeg\" alt=\"simon\"/>\n          </div>\n          <div>\n            <span className=\"text--bold\">Simon Eichenauer</span><br/>\n            Founder, <br/>\n            ShieldIT UG. <br/>\n            Worked together on 1 project.\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nconst GetInTouch = () => (\n  <section className=\"home__get-in-touch\">\n    <p>\n      <span className='text--bold text--large'>I understand the importance of communication</span><br/>\n      That is why I put emphasis on keeping you informed on weekly basis on the progress. I also put effort in\n      setting up testing instance as soon as possible where you can play around at any time.\n    </p>\n    <p>\n      <span className='text--bold text--large'>I understand the big picture</span><br/>\n      I've gained experience by working in multiple projects and I have the ability to ask the big picture\n      questions and to really understand how your product will interact with other parts of your business.\n    </p>\n    <p>\n      <span className='text--bold text--large'>I understand the value of time</span><br/>\n      I know that both your and mine time has value. That is why I focus on effective time management. I have a quite\n      good feeling about which decisions I can make on my own and for which ones I need your feedback. I'm also able to\n      work both as one person team managing your project or as a part of an existing team.\n    </p>\n    <p>\n      <span className='text--bold text--large'>I understand agile workflow</span><br/>\n      Every idea and project can be discussed indefinitely, but more often than not, there are going to be few &nbsp;\n      <span className='text--small'>(hopefully small)</span> changes along the way. I prefer to work in agile\n      environment and I always reserve time slots for feedback rounds and potential changes. That way we can always\n      react fast and change directions in case that original plan was not fully realised.\n    </p>\n    <p>\n      <span className='text--bold text--large'>I understand project lifecycle</span><br/>\n      Sometimes writing fancy one line solves it all lines of code is fun, but those tend to complicate things later. I\n      focus on writing clean, simple and efficient code with emphasis on readability, understandability and maintenance.\n      I've seen how longer project code bases can look like and I want to be able to give clean handover when my work is\n      finished.\n    </p>\n    <h2 className='title'>Get in touch</h2>\n    <p className=\"text--large\">\n      For any inquiries feel free to send me an email to <a href=\"mailto:dev.msaracevic@gmail.com\">dev.msaracevic@gmail.com</a>.<br/>\n      More references are available upon request.\n    </p>\n  </section>\n);\n\nconst Home = () => (\n  <article className=\"home\">\n    <Personal contact={work.contact}/>\n    <TechIcons/>\n    <Recommendations/>\n    <WorkItems items={work.professional}/>\n    <GetInTouch/>\n  </article>\n);\n\nexport default Home;\n","import React, {useEffect, useState} from 'react';\nimport ReactEmbedGist from 'react-embed-gist';\nimport './Resources.scss';\nimport {decodeHtmlEntity} from '../../helpers';\n\nconst apiVersion = '2.2';\nconst apiBase = 'https://api.stackexchange.com';\nconst userId = 3963682;\nconst favoritesUrl = `${apiBase}/${apiVersion}/users/${userId}/favorites?order=desc&sort=activity&site=stackoverflow`;\nconst questionsUrl = `${apiBase}/${apiVersion}/users/${userId}/questions?order=desc&sort=activity&site=stackoverflow`;\n\nconst StackOverflowItems = (props) => (\n  !props.items ? null : props.items.map(item => (\n    <div key={item.question_id} className='so-item'>\n      <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\" className='so-item__link'>\n        {decodeHtmlEntity(item.title)}\n      </a>\n      <div className=\"so-item__user\">\n        <img src={item.owner.profile_image} alt=\"owner\"/>\n      </div>\n      <div className=\"so-item__content\">\n        <p className=\"so-item__details\">\n          Viewed {item.view_count.toLocaleString('de-DE')} times,&nbsp;\n          <span className='text--bold'>{item.is_answered ? 'answered' : 'no answer'}</span>\n        </p>\n        <p className=\"so-item__details\">\n          Question score is {item.score.toLocaleString('de-DE')}\n        </p>\n        <p className=\"so-item__details\">\n          {item.tags.map((tag, index) => index < 3 ? <span key={tag} className=\"so-item__tag\">{tag}</span> : null)}\n        </p>\n      </div>\n    </div>\n  ))\n);\n\nconst Resources = () => {\n  const [gists, setGists] = useState([\n    {url: 'msaracevic/7a315f610c11d39aeea55061d3b9bf05', visible: false},\n    {url: 'msaracevic/5d757e2fc72482a9a4a439969500c2eb', visible: false}\n  ]);\n  const [favorites, setFavorites] = useState({});\n  const [questions, setQuestions] = useState({});\n\n  useEffect(() => {\n    if (!favorites.items) fetch(favoritesUrl).then(response => response.json()).then(response => setFavorites(response));\n    if (!questions.items) fetch(questionsUrl).then(response => response.json()).then(response => setQuestions(response));\n  }, [favorites, questions]);\n\n  return (\n    <React.Fragment>\n      <div className=\"white\">\n        <article className=\"resources\">\n          <div className=\"resources__item\">\n            <ReactEmbedGist gist=\"msaracevic/7a315f610c11d39aeea55061d3b9bf05\" wrapperClass=\"gist\"/>\n          </div>\n          <div className=\"resources__item\">\n            <ReactEmbedGist gist=\"msaracevic/5d757e2fc72482a9a4a439969500c2eb\" wrapperClass=\"gist\"/>\n          </div>\n          <div className=\"resources__item resources__item--so\">\n            <h2 className=\"title\">Stack Overflow Questions</h2>\n            <StackOverflowItems items={favorites.items}/>\n            <StackOverflowItems items={questions.items}/>\n          </div>\n        </article>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Resources;\n","import React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport About from './components/Home';\nimport Resources from './components/Resources';\n\nimport './styles/main.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <main className=\"page-content-main\">\n          <Route exact path=\"/\" component={About}/>\n          <Route exact path=\"/resources\" component={Resources}/>\n        </main>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n  <HashRouter>\n    <App />\n  </HashRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}