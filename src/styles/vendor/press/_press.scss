// Shamelessly copied from https://codyo.me/press/

// Global Default Variables
$press-text-color: #fff !default;
$press-text-alt: #000 !default;

// Colors
@import 'colors';

// Functions
@import 'functions';

/**
 * Press.css Mixin
 * @param  {boolean} $testContrast: true            True/False: the mixin should test the contrast of the background color.
 * @param  {color} $textColor: $press-text-color 	(Optional) Set a default text color.
 * @return {mixin}                					Returns the mixin and sub-classes.
 */
@mixin press( $testContrast: true, $textColor: $press-text-color ) {

  // Base
  box-sizing: border-box;
  background-color: var(--p);
  border: 2px solid var(--p);
  color: var(--c);
  cursor: pointer;
  display: inline-block;
  font-size: 1em;
  margin: 0;
  padding: 0.5em 0.75em;
  text-align: center;
  text-decoration: none;
  transition: background 0.15s linear;

  // Color Loop
  @each $color, $hex in $press-css-colors {
    &-#{$color} {
      --p: #{$hex};
      --c: if( $testContrast, press_test_contrast($hex, $textColor), $textColor );
      --h: #{lighten($hex, 5%)};
      --a: #{darken($hex, 10%)};
    }
  }

  // 	Shapes
  &-pill {
    border-radius: 20px / 50%;
  }
  &-round {
    border-radius: 8px;
  }
  &-circle {
    border-radius: 50%;
    height: 2.5em;
    padding: 0;
    width: 2.5em;
    white-space: nowrap;
  }

  // 	Styles
  &-raised {
    box-shadow: 2px 3px 20px 03px rgba(#333, 0.4);
  }
  &:disabled {
    cursor: not-allowed;
    opacity: 0.3;
  }
  &-ghost {
    color: var(--p);
    background-color: transparent;
  }

  // Event Effects
  &:hover:not(:disabled) {
    background-color: var(--h);
  }
  &:active:not(:disabled) {
    background-color: var(--a);
  }
  &-ghost:hover:not(:disabled) {
    color: var(--c);
  }

  // Sizes
  &-sm {
    font-size: 0.8em;
  }
  &-lg {
    font-size: 1.25em;
  }
  &-xl {
    font-size: 1.5em;
  }
}
